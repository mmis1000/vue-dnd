import{_ as n,p as s,q as a,a1 as p}from"./framework-9002dd78.js";const t={},e=p(`<h1 id="dynamic-toggle" tabindex="-1"><a class="header-anchor" href="#dynamic-toggle" aria-hidden="true">#</a> Dynamic toggle</h1><p>Both <code>useDraggable</code> and <code>useDroppable</code> accepts <code>Ref&lt;T&gt;</code> as <code>type</code> or <code>data</code></p><p>By use this with <code>ref</code> or <code>computed</code>, you can make the type/value emits/accepts changes dynamically.</p><p>Additionally,<br> Hooks also have a <code>disabled</code> option that allow you to toggle it on/of dynamically</p><p>for example</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">definedProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    disabled<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> Boolean
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> propsItem <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDroppable</span><span class="token punctuation">(</span>
    <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;ball&#39;</span> <span class="token operator">?</span> BallType <span class="token operator">:</span> PaperType<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token function-variable function">onDrop</span><span class="token operator">:</span> <span class="token punctuation">(</span>ev<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> dropped</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        disabled<span class="token operator">:</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>disabled<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">definedProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    index<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    disabled<span class="token operator">:</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> Boolean
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> propsItem <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDraggable</span><span class="token punctuation">(</span>
    <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;ball&#39;</span> <span class="token operator">?</span> BallType <span class="token operator">:</span> PaperType<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        disabled<span class="token operator">:</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>disabled<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","dynamic-toggle.html.vue"]]);export{r as default};
